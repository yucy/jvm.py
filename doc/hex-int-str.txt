ref:http://blog.csdn.net/crylearner/article/details/38521685

-------------------
整数之间的进制转换:

    10进制转16进制: hex(16)  ==>  0x10
    16进制转10进制: int('0x10', 16)  ==>  16

类似的还有oct()， bin()

-------------------

字符串转整数:

    10进制字符串: int('10')  ==>  10
    16进制字符串: int('10', 16)  ==>  16
    16进制字符串: int('0x10', 16)  ==>  16

-------------------

字节串转整数:

    转义为short型整数: struct.unpack('<hh', bytes(b'\x01\x00\x00\x00'))  ==>  (1, 0)
    转义为long型整数: struct.unpack('<L', bytes(b'\x01\x00\x00\x00'))  ==>  (1,)

-------------------

整数转字节串:

    转为两个字节: struct.pack('<HH', 1,2)  ==>  b'\x01\x00\x02\x00'
    转为四个字节: struct.pack('<LL', 1,2)  ==>  b'\x01\x00\x00\x00\x02\x00\x00\x00'

-------------------

字符串转字节串:

    字符串编码为字节码: '12abc'.encode('ascii')  ==>  b'12abc'
    数字或字符数组: bytes([1,2, ord('1'),ord('2')])  ==>  b'\x01\x0212'
    16进制字符串: bytes().fromhex('010210')  ==>  b'\x01\x02\x10'
    16进制字符串: bytes(map(ord, '\x01\x02\x31\x32'))  ==>  b'\x01\x0212'
    16进制数组: bytes([0x01,0x02,0x31,0x32])  ==>  b'\x01\x0212'

-------------------

字节串转字符串:

    字节码解码为字符串: bytes(b'\x31\x32\x61\x62').decode('ascii')  ==>  12ab
    字节串转16进制表示,夹带ascii: str(bytes(b'\x01\x0212'))[2:-1]  ==>  \x01\x0212
    字节串转16进制表示,固定两个字符表示: str(binascii.b2a_hex(b'\x01\x0212'))[2:-1]  ==>  01023132
    字节串转16进制数组: [hex(x) for x in bytes(b'\x01\x0212')]  ==>  ['0x1', '0x2', '0x31', '0x32']

-------------------
int(x [,base]) 将x转换为一个整数 
float(x ) 将x转换到一个浮点数 
complex(real [,imag]) 创建一个复数 
str(x) 将对象x转换为字符串 
repr(x) 将对象x转换为表达式字符串 
eval(str) 用来计算在字符串中的有效Python表达式,并返回一个对象 
tuple(s) 将序列s转换为一个元组 
list(s) 将序列s转换为一个列表 
chr(x) 将一个整数转换为一个字符 
unichr(x) 将一个整数转换为Unicode字符 
ord(x) 将一个字符转换为它的整数值 
hex(x) 将一个整数转换为一个十六进制字符串 
oct(x) 将一个整数转换为一个八进制字符串

-------------------
数学函数
abs(x)  x的绝对值：x和零之间的（正极）的距离。
ceil(x)     x的上限：最小整数不小于x
cmp(x, y)   -1 if x < y, 0 if x == y, 或1 if x > y
exp(x)  x的指数: ex
fabs(x)     x的绝对值
floor(x)    x的地板：最大的整数不大于x
log(x)  x的自然对数，对于x> 0时
log10(x)    以10为底的对数，X>0。
max(x1, x2,...)     它最大的参数：值最接近正无穷大
min(x1, x2,...)     它的最小参数：值最接近负无穷大
modf(x)     x的两个项元组的整数和小数部分。这两个元素具有相同的x符号。整数部分返回一个浮点数。
pow(x, y)    x**y 的值
round(x [,n])   x在小数点四舍五入到n位数字。 Python远离零点决定：round(0.5) 是1.0 而round(0.5) 为-1.0。
sqrt(x)     x的平方根（x>0）

随机数函数： 用于游戏，模拟，测试，安全性和保密性的应用的随机数。Python包括常用以下函数。
choice(seq)     从列表，元组或字符串随机项。
randrange ([start,] stop [,step])   从范围随机选择的元素（启动，停止，步骤）
random()    随机浮点数r，使得0是小于或等于r，r小于1
seed([x])   设置生成随机数使用整数开始值。调用任何其他随机模块函数之前调用这个函数。返回None。
shuffle(lst)    随机化代替列表中的项。返回None。
uniform(x, y)   随机浮点数r，使得x小于或等于r，r小于y

三角函数： Python包括以下执行三角函数计算功能。
acos(x)     返回x的反余弦值，以弧度形式表示
asin(x)     返回x的反正弦，以弧度形式表示
atan(x)     返回x的反正切值，以弧度表示形式
atan2(y, x)     返回反正切atan(y / x)，以弧度形式表示
cos(x)  返回x 弧度的余弦
hypot(x, y)     返回欧几里德范数，sqrt(x*x + y*y)
sin(x)  返回x的弧度的正弦值
tan(x)  返回x的弧度的正切
degrees(x)  从弧度到度角 x 的转换
radians(x)  从角度到弧度角 x 的转换