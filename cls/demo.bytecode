http://blog.csdn.net/vonzhoufz/article/details/45417725
http://www.cnblogs.com/lrh-xl/p/5346516.html

ca fe ba be 00 00 00 33 00 20 0a 00 07 00 11 09
00 12 00 13 08 00 14 0a 00 15 00 16 08 00 17 07
00 18 07 00 19 01 00 06 3c 69 6e 69 74 3e 01 00
03 28 29 56 01 00 04 43 6f 64 65 01 00 0f 4c 69
6e 65 4e 75 6d 62 65 72 54 61 62 6c 65 01 00 04
6d 61 69 6e 01 00 16 28 5b 4c 6a 61 76 61 2f 6c
61 6e 67 2f 53 74 72 69 6e 67 3b 29 56 01 00 0d
53 74 61 63 6b 4d 61 70 54 61 62 6c 65 01 00 0a
53 6f 75 72 63 65 46 69 6c 65 01 00 09 64 65 6d
6f 2e 6a 61 76 61 0c 00 08 00 09 07 00 1a 0c 00
1b 00 1c 01 00 06 62 69 67 67 65 72 07 00 1d 0c
00 1e 00 1f 01 00 07 73 6d 61 6c 6c 65 72 01 00
08 63 6c 73 2f 64 65 6d 6f 01 00 10 6a 61 76 61
2f 6c 61 6e 67 2f 4f 62 6a 65 63 74 01 00 10 6a
61 76 61 2f 6c 61 6e 67 2f 53 79 73 74 65 6d 01
00 03 6f 75 74 01 00 15 4c 6a 61 76 61 2f 69 6f
2f 50 72 69 6e 74 53 74 72 65 61 6d 3b 01 00 13
6a 61 76 61 2f 69 6f 2f 50 72 69 6e 74 53 74 72
65 61 6d 01 00 07 70 72 69 6e 74 6c 6e 01 00 15
28 4c 6a 61 76 61 2f 6c 61 6e 67 2f 53 74 72 69
6e 67 3b 29 56 00 21 00 06 00 07 00 00 00 00 00
02 00 01 00 08 00 09 00 01 00 0a 00 00 00 1d 00
01 00 01 00 00 00 05 2a b7 00 01 b1 00 00 00 01
00 0b 00 00 00 06 00 01 00 00 00 03 00 09 00 0c
00 0d 00 01 00 0a 00 00 00 57 00 02 00 03 00 00
00 1d 04 3c 05 3d 1b 1c a4 00 0e b2 00 02 12 03
b6 00 04 a7 00 0b b2 00 02 12 05 b6 00 04 b1 00
00 00 02 00 0b 00 00 00 1a 00 06 00 00 00 06 00
02 00 07 00 04 00 08 00 09 00 09 00 14 00 0b 00
1c 00 0d 00 0e 00 00 00 08 00 02 fd 00 14 01 01
07 00 01 00 0f 00 00 00 02 00 10

parser:
========================================================================
ca fe ba be
	u4 magic
00 00
	u2 minor_version
00 33
	u2 major_version
00 20
	u2 constant_pool_count (ps: count = 32-1 = 31)
---------------------------------------------------------
cp_info constant_pool[constant_pool_count-1]
0a 00 07 00 11 
	CONSTANT_Methodref_info {
		u1 tag;
		u2 class_index;
		u2 name_and_type_index;
	}

09 00 12 00 13 
	CONSTANT_Fieldref_info {
		u1 tag;
		u2 class_index;
		u2 name_and_type_index;
	}

08 00 14 
	CONSTANT_String_info {
		u1 tag;
		u2 string_index;
	}

0a 00 15 00 16 
	CONSTANT_Methodref_info {
		u1 tag;
		u2 class_index;
		u2 name_and_type_index;
	}
08 00 17 
	CONSTANT_String_info {
		u1 tag;
		u2 string_index;
	}

07 00 18 
07 00 19 
	CONSTANT_Class_info {
		u1 tag;
		u2 name_index;
	}

01 00 06 [3c 69 6e 69 74 3e]
01 00 03 [28 29 56]
01 00 04 [43 6f 64 65]
01 00 0f [4c 69 6e 65 4e 75 6d 62 65 72 54 61 62 6c 65]
01 00 04 [6d 61 69 6e]
01 00 16 [28 5b 4c 6a 61 76 61 2f 6c 61 6e 67 2f 53 74 72 69 6e 67 3b 29 56]
01 00 0d [53 74 61 63 6b 4d 61 70 54 61 62 6c 65]
01 00 0a [53 6f 75 72 63 65 46 69 6c 65]
01 00 09 [64 65 6d 6f 2e 6a 61 76 61]
	CONSTANT_Utf8_info {
		u1 tag;
		u2 length;
		u1 bytes[length];
	}

0c 00 08 00 09
	CONSTANT_NameAndType_info {
		u1 tag;
		u2 name_index;
		u2 descriptor_index;
	}

07 00 1a
	CONSTANT_Class_info...

0c 00 1b 00 1c
	CONSTANT_NameAndType_info...

01 00 06 [62 69 67 67 65 72]
	CONSTANT_Utf8_info...

07 00 1d
	CONSTANT_Class_info...

0c 00 1e 00 1f
	CONSTANT_NameAndType_info...

01 00 07 [73 6d 61 6c 6c 65 72]
01 00 08 [63 6c 73 2f 64 65 6d 6f]
01 00 10 [6a 61 76 61 2f 6c 61 6e 67 2f 4f 62 6a 65 63 74]
01 00 10 [6a 61 76 61 2f 6c 61 6e 67 2f 53 79 73 74 65 6d]
01 00 03 [6f 75 74]
01 00 15 [4c 6a 61 76 61 2f 69 6f 2f 50 72 69 6e 74 53 74 72 65 61 6d 3b]
01 00 13 [6a 61 76 61 2f 69 6f 2f 50 72 69 6e 74 53 74 72 65 61 6d]
01 00 07 [70 72 69 6e 74 6c 6e]
01 00 15 [28 4c 6a 61 76 61 2f 6c 61 6e 67 2f 53 74 72 69 6e 67 3b 29 56]
	CONSTANT_Utf8_info...
---------------------------------------------------------
00 21
	u2 access_flags
00 06
	u2 this_class
00 07
	u2 super_class
00 00
	u2 interfaces_count
ps:interfaces_count = 0 ,so,this item is null
	u2 interfaces[interfaces_count]
00 00
	u2 fields_count
ps:fields_count = 0 ,so,this item is null
	field_info fields[fields_count]

00 02
	u2 methods_count
---------------------------------------------------------
method_info methods[methods_count]

00 01 00 08 00 09 00 01
	method_info {
		u2 access_flags;
		u2 name_index;
		u2 descriptor_index;
		u2 attributes_count;
		attribute_info attributes[attributes_count];
	}
00 0a 00 00 00 1d [00 01 00 01 00 00 00 05 2a b7 00 01 b1 00 00 00 01 00 0b 00 00 00 06 00 01 00 00 00 03]
	attribute_info {
		u2 attribute_name_index;
		u4 attribute_length;
		u1 info[attribute_length];
	}

00 09 00 0c 00 0d 00 01
	method_info...

00 0a 00 00 00 57 [00 02 00 03 00 00 00 1d 04 3c 05 3d 1b 1c a4 00 0e b2 00 02 12 03 b6 00 04 a7 00 0b b2 00 02 12 05 b6 00 04 b1 00 00 00 02 00 0b 00 00 00 1a 00 06 00 00 00 06 00 02 00 07 00 04 00 08 00 09 00 09 00 14 00 0b 00 1c 00 0d 00 0e 00 00 00 08 00 02 fd 00 14 01 01 07]
	attribute_info...
---------------------------------------------------------

00 01
	u2 attributes_count

00 0f 00 00 00 02 00 10
	attribute_info...

==========================================================================
end parser.

Classfile /home/yucy/git/jvm.py/cls/demo.class
  Last modified 2016-11-25; size 491 bytes
  MD5 checksum 165416bdc65d90b4b6c2e25f19f17484
  Compiled from "demo.java"
public class cls.demo
  SourceFile: "demo.java"
  minor version: 0
  major version: 51
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #7.#17         //  java/lang/Object."<init>":()V
   #2 = Fieldref           #18.#19        //  java/lang/System.out:Ljava/io/PrintStream;
   #3 = String             #20            //  bigger
   #4 = Methodref          #21.#22        //  java/io/PrintStream.println:(Ljava/lang/String;)V
   #5 = String             #23            //  smaller
   #6 = Class              #24            //  cls/demo
   #7 = Class              #25            //  java/lang/Object
   #8 = Utf8               <init>
   #9 = Utf8               ()V
  #10 = Utf8               Code
  #11 = Utf8               LineNumberTable
  #12 = Utf8               main
  #13 = Utf8               ([Ljava/lang/String;)V
  #14 = Utf8               StackMapTable
  #15 = Utf8               SourceFile
  #16 = Utf8               demo.java
  #17 = NameAndType        #8:#9          //  "<init>":()V
  #18 = Class              #26            //  java/lang/System
  #19 = NameAndType        #27:#28        //  out:Ljava/io/PrintStream;
  #20 = Utf8               bigger
  #21 = Class              #29            //  java/io/PrintStream
  #22 = NameAndType        #30:#31        //  println:(Ljava/lang/String;)V
  #23 = Utf8               smaller
  #24 = Utf8               cls/demo
  #25 = Utf8               java/lang/Object
  #26 = Utf8               java/lang/System
  #27 = Utf8               out
  #28 = Utf8               Ljava/io/PrintStream;
  #29 = Utf8               java/io/PrintStream
  #30 = Utf8               println
  #31 = Utf8               (Ljava/lang/String;)V
{
  public cls.demo();
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0       
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return        
      LineNumberTable:
        line 3: 0

  public static void main(java.lang.String[]);
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=1
         0: iconst_1      
         1: istore_1      
         2: iconst_2      
         3: istore_2      
         4: iload_1       
         5: iload_2       
         6: if_icmple     20
         9: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
        12: ldc           #3                  // String bigger
        14: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        17: goto          28
        20: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
        23: ldc           #5                  // String smaller
        25: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        28: return        
      LineNumberTable:
        line 6: 0
        line 7: 2
        line 8: 4
        line 9: 9
        line 11: 20
        line 13: 28
      StackMapTable: number_of_entries = 2
           frame_type = 253 /* append */
             offset_delta = 20
        locals = [ int, int ]
           frame_type = 7 /* same */

}
